// KENYA LAND USE/LAND COVER ANALYSIS USING ESA WORLDCOVER
// 1. Define Kenya boundary
var kenya = ee.FeatureCollection("FAO/GAUL/2015/level0")
              .filter(ee.Filter.eq('ADM0_NAME', 'Kenya'));

// 2. Load ESA WorldCover data (2020 example)
var esa2020 = ee.ImageCollection("ESA/WorldCover/v100")
               .filterBounds(kenya)
               .filterDate('2020-01-01', '2020-12-31')
               .first()
               .clip(kenya);

// 3. ESA Official Class Palette
var esaPalette = [
  '006400', // 10-Tree cover
  'ffbb22', // 20-Shrubland
  'ffff4c', // 30-Grassland
  'f096ff', // 40-Cropland
  'fa0000', // 50-Built-up
  'b4b4b4', // 60-Bare/sparse
  'f0f0f0', // 70-Snow/ice
  '0064c8', // 80-Water
  '0096a0', // 90-Wetland
  '00cf75', // 95-Mangroves
  'fae6a0'  // 100-Moss/lichens
];

// 4. Reclassify to Kenya-specific classes
var kenyaClasses = esa2020.remap(
  [10, 20, 30, 40, 50, 60, 80, 90, 95],  // ESA values
  [0,  1,  1,  2,  3,  5,  4,  4,  0 ],  // Kenya classes
  6  // Default class (Other)
).rename('kenya_lulc');

// 5. Kenya Class Names and Palette
var kenyaClassNames = {
  0: 'Forest',
  1: 'Grassland/Rangeland',
  2: 'Agriculture',
  3: 'Urban/Built-up',
  4: 'Water',
  5: 'Bare Ground',
  6: 'Other'
};

var kenyaPalette = [
  '006400', // Forest (dark green)
  'd2b48c', // Grassland (tan)
  'ffff00', // Agriculture (yellow)
  'ff0000', // Urban (red)
  '0000ff', // Water (blue)
  '8b4513', // Bare Ground (brown)
  'ffffff'  // Other (white)
];

// 6. Calculate area statistics - PROPERLY FIXED VERSION
// 1. DEFINE CLASS NAMES AS EE DICTIONARY
var kenyaClassNames = ee.Dictionary({
  '0': 'Forest',
  '1': 'Grassland/Rangeland',
  '2': 'Agriculture',
  '3': 'Urban/Built-up',
  '4': 'Water',
  '5': 'Bare Ground',
  '6': 'Other'
});

// 2. CALCULATE AREA STATISTICS (OPTIMIZED)
var areaStats = ee.Image.pixelArea()
  .addBands(kenyaClasses)
  .reduceRegion({
    reducer: ee.Reducer.sum().group({
      groupField: 1,
      groupName: 'class'
    }),
    geometry: kenya,
    scale: 100,  // Coarser scale for faster processing
    maxPixels: 1e13
  });

// 3. PROCESS RESULTS (FIXED)
var classAreas = ee.List(areaStats.get('groups')).map(function(item) {
  item = ee.Dictionary(item);
  var classValue = ee.Number(item.get('class')).format('%d');
  var className = kenyaClassNames.get(classValue);
  var areaHa = ee.Number(item.get('sum')).divide(10000);
  
  return ee.Feature(null, {
    'Class_Value': classValue,
    'Class': className,
    'Area_ha': areaHa
  });
});

// 4. FILTER AND SORT RESULTS
var finalResults = ee.FeatureCollection(classAreas)
  .filter(ee.Filter.notNull(['Class']))
  .filter(ee.Filter.neq('Class', null))
  .sort('Area_ha', false);

// 5. PRINT FORMATTED RESULTS
print('Area by Class (hectares):', finalResults);

// 6. OPTIONAL: CREATE A CHART
var chart = ui.Chart.feature.byFeature(finalResults, 'Class', 'Area_ha')
  .setChartType('ColumnChart')
  .setOptions({
    title: 'Land Cover Area Distribution in Kenya (ha)',
    hAxis: {title: 'Land Cover Class'},
    vAxis: {title: 'Area (hectares)'},
    legend: {position: 'none'}
  });
print(chart);

// 7. Time-series change detection (2016-2021)
var esaTimeSeries = ee.ImageCollection("ESA/WorldCover/v100")
                     .filterBounds(kenya)
                     .filter(ee.Filter.calendarRange(2016, 2021, 'year'));

// Forest change analysis
var forestChange = esaTimeSeries.map(function(img) {
  var year = ee.Date(img.get('system:time_start')).get('year');
  var forest = img.eq(10).rename('forest'); // ESA Tree Cover class
  return forest.set('year', year);
});

// Create forest loss/gain composite
var forestComposite = forestChange.sum();

// ==============================================
// VISUALIZATION
// ==============================================

// Set map center to Kenya
Map.centerObject(kenya, 6);

// Add layers to map
Map.addLayer(esa2020, {min:10, max:100, palette: esaPalette}, 'ESA Original 2020');
Map.addLayer(kenyaClasses, {min:0, max:6, palette: kenyaPalette}, 'Kenya LULC 2020');
Map.addLayer(forestComposite.selfMask(), {palette: ['yellow','orange','red']}, 'Forest Change 2016-2021');

// Add legend
var legend = ui.Panel({
  style: {
    position: 'bottom-right',
    padding: '8px 15px'
  }
});

function addLegendItem(color, name) {
  var colorBox = ui.Label({
    style: {
      backgroundColor: color,
      padding: '8px',
      margin: '0 0 4px 0'
    }
  });
  
  var description = ui.Label({
    value: name,
    style: {margin: '0 0 4px 6px'}
  });
  
  return ui.Panel({
    widgets: [colorBox, description],
    layout: ui.Panel.Layout.Flow('horizontal')
  });
}

// Add legend items for Kenya classes
Object.keys(kenyaClassNames).forEach(function(key) {
  legend.add(addLegendItem(kenyaPalette[key], kenyaClassNames[key]));
});

Map.add(legend);

// EXPORTS AND PRINT RESULTS


// Print area statistics
print('Area by Class (hectares):', ee.FeatureCollection(classAreas));

// Export options (uncomment to use)
/*
// 1. Export Kenya LULC as GeoTIFF
Export.image.toDrive({
  image: kenyaClasses,
  description: 'Kenya_LULC_2020',
  scale: 10,
  region: kenya,
  fileFormat: 'GeoTIFF',
  maxPixels: 1e13
});

// 2. Export area stats as CSV
Export.table.toDrive({
  collection: ee.FeatureCollection(classAreas),
  description: 'Kenya_LULC_Area_Stats',
  fileFormat: 'CSV'
});
*/

// ==============================================
// ADDITIONAL ANALYSIS OPTIONS (UNCOMMENT TO USE)
// ==============================================

/*
// A. County-level analysis
var counties = ee.FeatureCollection("FAO/GAUL/2015/level1")
                .filter(ee.Filter.eq('ADM0_NAME', 'Kenya'));

// B. Agricultural expansion analysis
var cropExpansion = esaTimeSeries.select('Map').eq(40); // Cropland class
var cropChange = cropExpansion.sum().selfMask();
Map.addLayer(cropChange, {palette: ['white','yellow','green']}, 'Cropland Expansion');

// C. Urban growth analysis
var urbanGrowth = esaTimeSeries.select('Map').eq(50); // Built-up class
var urbanChange = urbanGrowth.sum().selfMask();
Map.addLayer(urbanChange, {palette: ['white','orange','red']}, 'Urban Growth');
*/
